{"ast":null,"code":"var _jsxFileName = \"C:\\\\felder_silveman\\\\frontend\\\\src\\\\components\\\\DashboardMetrics\\\\DashboardMetrics.tsx\";\n// src/components/DashboardMetrics/DashboardMetrics.tsx\n\nimport React from 'react';\nimport { Box, Typography, Grid, Paper } from '@mui/material';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Configuración de Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend);\nconst DashboardMetrics = () => {\n  // Datos de ejemplo para los gráficos\n  const lineChartData = {\n    labels: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun'],\n    datasets: [{\n      label: 'Ventas Mensuales',\n      data: [65, 59, 80, 81, 56, 55],\n      borderColor: '#4CAF50',\n      backgroundColor: 'rgba(76, 175, 80, 0.2)',\n      fill: true\n    }]\n  };\n  const barChartData = {\n    labels: ['Producto A', 'Producto B', 'Producto C', 'Producto D'],\n    datasets: [{\n      label: 'Ventas por Producto',\n      data: [12, 19, 3, 5],\n      backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0']\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"M\\xE9tricas del Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Ventas Mensuales\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            data: lineChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Ventas por Producto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            data: barChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_c = DashboardMetrics;\nexport default DashboardMetrics;\nvar _c;\n$RefreshReg$(_c, \"DashboardMetrics\");","map":{"version":3,"names":["React","Box","Typography","Grid","Paper","Line","Bar","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","DashboardMetrics","lineChartData","labels","datasets","label","data","borderColor","backgroundColor","fill","barChartData","sx","flexGrow","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","md","elevation","_c","$RefreshReg$"],"sources":["C:/felder_silveman/frontend/src/components/DashboardMetrics/DashboardMetrics.tsx"],"sourcesContent":["// src/components/DashboardMetrics/DashboardMetrics.tsx\r\n\r\nimport React from 'react';\r\nimport { Box, Typography, Grid, Paper } from '@mui/material';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\n// Configuración de Chart.js\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst DashboardMetrics: React.FC = () => {\r\n  // Datos de ejemplo para los gráficos\r\n  const lineChartData = {\r\n    labels: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun'],\r\n    datasets: [\r\n      {\r\n        label: 'Ventas Mensuales',\r\n        data: [65, 59, 80, 81, 56, 55],\r\n        borderColor: '#4CAF50',\r\n        backgroundColor: 'rgba(76, 175, 80, 0.2)',\r\n        fill: true\r\n      }\r\n    ]\r\n  };\r\n\r\n  const barChartData = {\r\n    labels: ['Producto A', 'Producto B', 'Producto C', 'Producto D'],\r\n    datasets: [\r\n      {\r\n        label: 'Ventas por Producto',\r\n        data: [12, 19, 3, 5],\r\n        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0']\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1, p: 3 }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Métricas del Dashboard\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <Paper elevation={3} sx={{ p: 3 }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Ventas Mensuales\r\n            </Typography>\r\n            <Line data={lineChartData} />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Paper elevation={3} sx={{ p: 3 }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Ventas por Producto\r\n            </Typography>\r\n            <Bar data={barChartData} />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DashboardMetrics;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}