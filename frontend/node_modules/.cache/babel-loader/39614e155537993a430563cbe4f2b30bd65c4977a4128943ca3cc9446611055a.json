{"ast":null,"code":"var _jsxFileName = \"C:\\\\felder_silveman\\\\frontend\\\\src\\\\components\\\\LoginForm.tsx\",\n  _s = $RefreshSig$();\n// Ubicación: src/components/LoginForm.tsx\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { TextField, Button, Container, Typography, Box, Link } from '@mui/material';\nimport { Google as GoogleIcon } from '@mui/icons-material';\nimport { useAuth } from '../AuthContext';\nimport RegisterForm from './RegisterForm';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [mode, setMode] = useState('login');\n  const navigate = useNavigate();\n  const {\n    login\n  } = useAuth();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (mode === 'login') {\n      try {\n        await login(email, password);\n        navigate('/dashboard');\n      } catch (error) {\n        var _error$response, _error$response$data;\n        alert('Login failed: ' + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message));\n      }\n    } else if (mode === 'register') {\n      alert('Registration successful. Please log in.');\n      setMode('login');\n    } else if (mode === 'recover') {\n      alert('Password recovery email sent');\n      setMode('login');\n    }\n  };\n  const handleGoogleLogin = () => {\n    window.location.href = '/auth/google';\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        mt: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: [mode === 'login' && 'Login', mode === 'register' && 'Register', mode === 'recover' && 'Recover Password']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), mode === 'register' ? /*#__PURE__*/_jsxDEV(RegisterForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        sx: {\n          mt: 1,\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"email\",\n          label: \"Email Address\",\n          name: \"email\",\n          autoComplete: \"email\",\n          autoFocus: true,\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), mode !== 'recover' && /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          id: \"password\",\n          autoComplete: \"current-password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          children: [mode === 'login' && 'Login', mode === 'recover' && 'Send Recovery Email']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mb: 2\n          },\n          onClick: handleGoogleLogin,\n          startIcon: /*#__PURE__*/_jsxDEV(GoogleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 26\n          }, this),\n          children: \"Login with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: mode === 'login' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              href: \"#\",\n              variant: \"body2\",\n              onClick: () => setMode('register'),\n              children: \"Don't have an account? Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              href: \"#\",\n              variant: \"body2\",\n              onClick: () => setMode('recover'),\n              children: \"Forgot password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Link, {\n            href: \"#\",\n            variant: \"body2\",\n            onClick: () => setMode('login'),\n            children: \"Back to Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"7h1QC/fFq/8rnAi3ZhHLE8eff48=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useNavigate","TextField","Button","Container","Typography","Box","Link","Google","GoogleIcon","useAuth","RegisterForm","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginForm","_s","email","setEmail","password","setPassword","mode","setMode","navigate","login","handleSubmit","e","preventDefault","error","_error$response","_error$response$data","alert","response","data","message","handleGoogleLogin","window","location","href","maxWidth","children","sx","display","flexDirection","alignItems","mt","component","variant","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","width","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","value","onChange","target","type","mb","onClick","startIcon","justifyContent","_c","$RefreshReg$"],"sources":["C:/felder_silveman/frontend/src/components/LoginForm.tsx"],"sourcesContent":["// Ubicación: src/components/LoginForm.tsx\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { TextField, Button, Container, Typography, Box, Link } from '@mui/material';\r\nimport { Google as GoogleIcon } from '@mui/icons-material';\r\nimport { useAuth } from '../AuthContext';\r\nimport RegisterForm from './RegisterForm';\r\n\r\nconst LoginForm: React.FC = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [mode, setMode] = useState<'login' | 'register' | 'recover'>('login');\r\n  const navigate = useNavigate();\r\n  const { login } = useAuth();\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (mode === 'login') {\r\n      try {\r\n        await login(email, password);\r\n        navigate('/dashboard');\r\n      } catch (error: any) {\r\n        alert('Login failed: ' + (error.response?.data?.message || error.message));\r\n      }\r\n    } else if (mode === 'register') {\r\n      alert('Registration successful. Please log in.');\r\n      setMode('login');\r\n    } else if (mode === 'recover') {\r\n      alert('Password recovery email sent');\r\n      setMode('login');\r\n    }\r\n  };\r\n\r\n  const handleGoogleLogin = () => {\r\n    window.location.href = '/auth/google';\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          mt: 8,\r\n        }}\r\n      >\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          {mode === 'login' && 'Login'}\r\n          {mode === 'register' && 'Register'}\r\n          {mode === 'recover' && 'Recover Password'}\r\n        </Typography>\r\n        {mode === 'register' ? (\r\n          <RegisterForm />\r\n        ) : (\r\n          <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1, width: '100%' }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            {mode !== 'recover' && (\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            )}\r\n            <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 3, mb: 2 }}>\r\n              {mode === 'login' && 'Login'}\r\n              {mode === 'recover' && 'Send Recovery Email'}\r\n            </Button>\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mb: 2 }}\r\n              onClick={handleGoogleLogin}\r\n              startIcon={<GoogleIcon />}\r\n            >\r\n              Login with Google\r\n            </Button>\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n              {mode === 'login' ? (\r\n                <>\r\n                  <Link href=\"#\" variant=\"body2\" onClick={() => setMode('register')}>\r\n                    {\"Don't have an account? Register\"}\r\n                  </Link>\r\n                  <Link href=\"#\" variant=\"body2\" onClick={() => setMode('recover')}>\r\n                    {\"Forgot password?\"}\r\n                  </Link>\r\n                </>\r\n              ) : (\r\n                <Link href=\"#\" variant=\"body2\" onClick={() => setMode('login')}>\r\n                  {\"Back to Login\"}\r\n                </Link>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}