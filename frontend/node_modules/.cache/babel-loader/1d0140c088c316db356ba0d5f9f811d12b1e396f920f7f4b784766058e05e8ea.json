{"ast":null,"code":"var _jsxFileName = \"C:\\\\02072024\\\\frontend\\\\src\\\\components\\\\PrivateRoute.tsx\";\n// PrivateRoute.tsx\n\nimport React from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  element: Element,\n  ...rest\n}) => {\n  // Lógica para verificar autenticación o permisos\n  const isAuthenticated = true; // Aquí debes implementar tu lógica real de autenticación\n\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    element: () => isAuthenticated ? /*#__PURE__*/_jsxDEV(Element, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 41\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Route","Navigate","jsxDEV","_jsxDEV","PrivateRoute","element","Element","rest","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["C:/02072024/frontend/src/components/PrivateRoute.tsx"],"sourcesContent":["// PrivateRoute.tsx\r\n\r\nimport React from 'react';\r\nimport { Route, Navigate } from 'react-router-dom';\r\n\r\ninterface PrivateRouteProps {\r\n  element: React.ReactNode;\r\n  path: string;\r\n  // Puedes agregar otras props según sea necesario\r\n}\r\n\r\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({ element: Element, ...rest }) => {\r\n  // Lógica para verificar autenticación o permisos\r\n  const isAuthenticated = true; // Aquí debes implementar tu lógica real de autenticación\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      element={() =>\r\n        isAuthenticated ? <Element /> : <Navigate to=\"/login\" replace />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQnD,MAAMC,YAAyC,GAAGA,CAAC;EAAEC,OAAO,EAAEC,OAAO;EAAE,GAAGC;AAAK,CAAC,KAAK;EACnF;EACA,MAAMC,eAAe,GAAG,IAAI,CAAC,CAAC;;EAE9B,oBACEL,OAAA,CAACH,KAAK;IAAA,GACAO,IAAI;IACRF,OAAO,EAAEA,CAAA,KACPG,eAAe,gBAAGL,OAAA,CAACG,OAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGT,OAAA,CAACF,QAAQ;MAACY,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAChE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEN,CAAC;AAACG,EAAA,GAZIX,YAAyC;AAc/C,eAAeA,YAAY;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}