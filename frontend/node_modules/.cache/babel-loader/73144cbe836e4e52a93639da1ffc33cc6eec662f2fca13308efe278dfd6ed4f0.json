{"ast":null,"code":"var _jsxFileName = \"C:\\\\felder_silveman\\\\frontend\\\\src\\\\components\\\\DashboardMetrics\\\\TeacMetrics.tsx\",\n  _s = $RefreshSig$();\n// src/components/TeacMetrics.tsx\nimport React, { useState, useEffect } from 'react';\nimport { Box, Tabs, Tab, Typography } from '@mui/material';\nimport { Bar, Line, Pie } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { Chart as ChartJS, ArcElement, CategoryScale, LinearScale, Title, Tooltip, Legend } from 'chart.js';\n\n// Registrar los elementos necesarios para Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, CategoryScale, LinearScale, Title, Tooltip, Legend);\nconst TeacMetrics = () => {\n  _s();\n  const [granularity, setGranularity] = useState('yearly');\n  const [chartType, setChartType] = useState('line');\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/users/metrics/${granularity}`);\n        const data = response.data;\n        setChartData({\n          labels: data[granularity],\n          datasets: [{\n            label: 'Número de usuarios',\n            data: data.values,\n            backgroundColor: ['rgba(75, 192, 192, 0.2)', 'rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(75, 192, 192, 1)', 'rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        });\n      } catch (error) {\n        console.error('Error al cargar los datos', error);\n      }\n    };\n    fetchData();\n  }, [granularity]);\n  const handleGranularityChange = (event, newValue) => {\n    setGranularity(newValue);\n  };\n  const handleChartTypeChange = (event, newValue) => {\n    setChartType(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      p: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"M\\xE9tricas de Usuarios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      value: granularity,\n      onChange: handleGranularityChange,\n      sx: {\n        borderBottom: 1,\n        borderColor: 'divider'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Anual\",\n        value: \"yearly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Mensual\",\n        value: \"monthly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Semanal\",\n        value: \"weekly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Diario\",\n        value: \"daily\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flex: 1,\n          p: 3\n        },\n        children: [chartType === 'line' && chartData && /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 49\n        }, this), chartType === 'bar' && chartData && /*#__PURE__*/_jsxDEV(Bar, {\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 48\n        }, this), chartType === 'pie' && chartData && /*#__PURE__*/_jsxDEV(Pie, {\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        orientation: \"vertical\",\n        value: chartType,\n        onChange: handleChartTypeChange,\n        sx: {\n          minWidth: 100,\n          borderLeft: 1,\n          borderColor: 'divider'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"L\\xEDnea\",\n          value: \"line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Barras\",\n          value: \"bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Circular\",\n          value: \"pie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(TeacMetrics, \"uQvSeEyMKRIBECS3VxD5p4KH2og=\");\n_c = TeacMetrics;\nexport default TeacMetrics;\nvar _c;\n$RefreshReg$(_c, \"TeacMetrics\");","map":{"version":3,"names":["React","useState","useEffect","Box","Tabs","Tab","Typography","Bar","Line","Pie","axios","Chart","ChartJS","ArcElement","CategoryScale","LinearScale","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","TeacMetrics","_s","granularity","setGranularity","chartType","setChartType","chartData","setChartData","fetchData","response","get","data","labels","datasets","label","values","backgroundColor","borderColor","borderWidth","error","console","handleGranularityChange","event","newValue","handleChartTypeChange","sx","display","flexDirection","alignItems","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","borderBottom","width","flex","orientation","minWidth","borderLeft","_c","$RefreshReg$"],"sources":["C:/felder_silveman/frontend/src/components/DashboardMetrics/TeacMetrics.tsx"],"sourcesContent":["// src/components/TeacMetrics.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Box, Tabs, Tab, Typography } from '@mui/material';\r\nimport { Bar, Line, Pie } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport { Chart as ChartJS, ArcElement, CategoryScale, LinearScale, Title, Tooltip, Legend } from 'chart.js';\r\n\r\n// Registrar los elementos necesarios para Chart.js\r\nChartJS.register(ArcElement, CategoryScale, LinearScale, Title, Tooltip, Legend);\r\n\r\ntype Granularity = 'yearly' | 'monthly' | 'weekly' | 'daily';\r\ntype ChartType = 'line' | 'bar' | 'pie';\r\n\r\nconst TeacMetrics: React.FC = () => {\r\n  const [granularity, setGranularity] = useState<Granularity>('yearly');\r\n  const [chartType, setChartType] = useState<ChartType>('line');\r\n  const [chartData, setChartData] = useState<any>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/users/metrics/${granularity}`);\r\n        const data = response.data;\r\n        setChartData({\r\n          labels: data[granularity],\r\n          datasets: [\r\n            {\r\n              label: 'Número de usuarios',\r\n              data: data.values,\r\n              backgroundColor: [\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n              ],\r\n              borderColor: [\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n              ],\r\n              borderWidth: 1,\r\n            },\r\n          ],\r\n        });\r\n      } catch (error) {\r\n        console.error('Error al cargar los datos', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [granularity]);\r\n\r\n  const handleGranularityChange = (event: React.SyntheticEvent, newValue: Granularity) => {\r\n    setGranularity(newValue);\r\n  };\r\n\r\n  const handleChartTypeChange = (event: React.SyntheticEvent, newValue: ChartType) => {\r\n    setChartType(newValue);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 2 }}>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Métricas de Usuarios\r\n      </Typography>\r\n\r\n      {/* Tabs para seleccionar la granularidad */}\r\n      <Tabs value={granularity} onChange={handleGranularityChange} sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n        <Tab label=\"Anual\" value=\"yearly\" />\r\n        <Tab label=\"Mensual\" value=\"monthly\" />\r\n        <Tab label=\"Semanal\" value=\"weekly\" />\r\n        <Tab label=\"Diario\" value=\"daily\" />\r\n      </Tabs>\r\n\r\n      {/* Contenedor para el gráfico y la selección de tipo de gráfico */}\r\n      <Box sx={{ display: 'flex', alignItems: 'center', width: '100%' }}>\r\n        \r\n        {/* Renderizado del gráfico */}\r\n        <Box sx={{ flex: 1, p: 3 }}>\r\n          {chartType === 'line' && chartData && <Line data={chartData} />}\r\n          {chartType === 'bar' && chartData && <Bar data={chartData} />}\r\n          {chartType === 'pie' && chartData && <Pie data={chartData} />}\r\n        </Box>\r\n\r\n        {/* Selección de tipo de gráfico */}\r\n        <Tabs \r\n          orientation=\"vertical\" \r\n          value={chartType} \r\n          onChange={handleChartTypeChange} \r\n          sx={{ minWidth: 100, borderLeft: 1, borderColor: 'divider' }}\r\n        >\r\n          <Tab label=\"Línea\" value=\"line\" />\r\n          <Tab label=\"Barras\" value=\"bar\" />\r\n          <Tab label=\"Circular\" value=\"pie\" />\r\n        </Tabs>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TeacMetrics;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}