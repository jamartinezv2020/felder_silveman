{"ast":null,"code":"var _jsxFileName = \"C:\\\\felder_silveman\\\\frontend\\\\src\\\\components\\\\DashboardMetrics\\\\TeacMetrics.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Typography, Grid, Paper, Tabs, Tab } from '@mui/material';\nimport { Line, Bar, Pie } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, BarElement, ArcElement, Filler } from 'chart.js';\n\n// Registro de componentes del gráfico\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, BarElement, ArcElement, Filler);\nconst TeacMetrics = () => {\n  _s();\n  const [userStats, setUserStats] = useState(null);\n  const [granularity, setGranularity] = useState('monthly');\n  const [chartType, setChartType] = useState('line');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/users/metrics/${granularity}`);\n        setUserStats(response.data);\n      } catch (error) {\n        console.error('Error al obtener datos', error);\n        setUserStats({\n          error: `Error al cargar los datos ${granularity}`\n        });\n      }\n    };\n    fetchData();\n  }, [granularity]);\n  const handleGranularityChange = (event, newValue) => {\n    setGranularity(newValue);\n  };\n  const handleChartTypeChange = (event, newValue) => {\n    setChartType(newValue);\n  };\n  if (userStats && userStats.error) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: userStats.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n  if (!userStats) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Cargando datos...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Determinar etiquetas basadas en la granularidad\n  const labels = granularity === 'daily' ? userStats.dates || [] : granularity === 'weekly' ? userStats.weeks || [] : granularity === 'yearly' ? userStats.years || [] : userStats.months || [];\n  const values = userStats.values || [];\n\n  // Asignar diferentes colores\n  const colors = ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)', 'rgba(255, 159, 64, 0.6)'];\n  const borderColors = ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'];\n  const chartData = {\n    labels: labels,\n    // Etiquetas para todos los gráficos\n    datasets: [{\n      label: 'Número de Usuarios Nuevos',\n      data: values,\n      borderColor: borderColors,\n      backgroundColor: colors,\n      borderWidth: chartType === 'pie' ? 1 : 2,\n      fill: chartType === 'line' // Solo llena el área para el gráfico de líneas\n    }]\n  };\n  const lineBarChartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top'\n      },\n      tooltip: {\n        callbacks: {\n          label: context => `${context.dataset.label}: ${context.raw}`\n        }\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: granularity === 'daily' ? 'Días' : granularity === 'weekly' ? 'Semanas' : granularity === 'yearly' ? 'Años' : 'Meses'\n        },\n        grid: {\n          display: false\n        },\n        ticks: {\n          autoSkip: false,\n          // No auto-skip, para mostrar todos los datos\n          maxTicksLimit: 20\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Número de Usuarios Nuevos'\n        },\n        grid: {\n          borderDash: [5, 5]\n        },\n        ticks: {\n          beginAtZero: true\n        }\n      }\n    }\n  };\n  const pieChartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top' // Mostrar leyenda en la parte superior\n      },\n      tooltip: {\n        callbacks: {\n          label: context => {\n            const label = context.label || '';\n            const value = context.raw || '';\n            const percentage = (value / values.reduce((a, b) => a + b, 0) * 100).toFixed(2) + '%';\n            return `${label}: ${value} (${percentage})`;\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"M\\xE9tricas del Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      value: granularity,\n      onChange: handleGranularityChange,\n      indicatorColor: \"primary\",\n      textColor: \"primary\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Diario\",\n        value: \"daily\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Semanal\",\n        value: \"weekly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Mensual\",\n        value: \"monthly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Anual\",\n        value: \"yearly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      value: chartType,\n      onChange: handleChartTypeChange,\n      indicatorColor: \"secondary\",\n      textColor: \"secondary\",\n      centered: true,\n      sx: {\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: \"L\\xEDneas\",\n        value: \"line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Barras\",\n        value: \"bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Circular\",\n        value: \"pie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      sx: {\n        mt: 3,\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Usuarios Nuevos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), chartType === 'line' && /*#__PURE__*/_jsxDEV(Line, {\n            data: chartData,\n            options: lineBarChartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 38\n          }, this), chartType === 'bar' && /*#__PURE__*/_jsxDEV(Bar, {\n            data: chartData,\n            options: lineBarChartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 37\n          }, this), chartType === 'pie' && /*#__PURE__*/_jsxDEV(Pie, {\n            data: chartData,\n            options: pieChartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(TeacMetrics, \"l0MkSMrpdg7QvupgmjKWsw9VMWs=\");\n_c = TeacMetrics;\nexport default TeacMetrics;\nvar _c;\n$RefreshReg$(_c, \"TeacMetrics\");","map":{"version":3,"names":["React","useEffect","useState","Box","Typography","Grid","Paper","Tabs","Tab","Line","Bar","Pie","axios","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","BarElement","ArcElement","Filler","jsxDEV","_jsxDEV","register","TeacMetrics","_s","userStats","setUserStats","granularity","setGranularity","chartType","setChartType","fetchData","response","get","data","error","console","handleGranularityChange","event","newValue","handleChartTypeChange","variant","children","fileName","_jsxFileName","lineNumber","columnNumber","labels","dates","weeks","years","months","values","colors","borderColors","chartData","datasets","label","borderColor","backgroundColor","borderWidth","fill","lineBarChartOptions","responsive","plugins","legend","display","position","tooltip","callbacks","context","dataset","raw","scales","x","title","text","grid","ticks","autoSkip","maxTicksLimit","y","borderDash","beginAtZero","pieChartOptions","value","percentage","reduce","a","b","toFixed","sx","flexGrow","p","gutterBottom","onChange","indicatorColor","textColor","centered","mt","container","spacing","justifyContent","item","xs","md","lg","elevation","options","_c","$RefreshReg$"],"sources":["C:/felder_silveman/frontend/src/components/DashboardMetrics/TeacMetrics.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Box, Typography, Grid, Paper, Tabs, Tab } from '@mui/material';\r\nimport { Line, Bar, Pie } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  BarElement,\r\n  ArcElement,\r\n  Filler,\r\n} from 'chart.js';\r\n\r\n// Registro de componentes del gráfico\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, BarElement, ArcElement, Filler);\r\n\r\nconst TeacMetrics: React.FC = () => {\r\n  const [userStats, setUserStats] = useState<any>(null);\r\n  const [granularity, setGranularity] = useState<'daily' | 'monthly' | 'weekly' | 'yearly'>('monthly');\r\n  const [chartType, setChartType] = useState<'line' | 'bar' | 'pie'>('line');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/users/metrics/${granularity}`);\r\n        setUserStats(response.data);\r\n      } catch (error) {\r\n        console.error('Error al obtener datos', error);\r\n        setUserStats({ error: `Error al cargar los datos ${granularity}` });\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [granularity]);\r\n\r\n  const handleGranularityChange = (event: React.SyntheticEvent, newValue: 'daily' | 'monthly' | 'weekly' | 'yearly') => {\r\n    setGranularity(newValue);\r\n  };\r\n\r\n  const handleChartTypeChange = (event: React.SyntheticEvent, newValue: 'line' | 'bar' | 'pie') => {\r\n    setChartType(newValue);\r\n  };\r\n\r\n  if (userStats && userStats.error) {\r\n    return <Typography variant=\"h6\">{userStats.error}</Typography>;\r\n  }\r\n\r\n  if (!userStats) {\r\n    return <Typography variant=\"h6\">Cargando datos...</Typography>;\r\n  }\r\n\r\n  // Determinar etiquetas basadas en la granularidad\r\n  const labels = granularity === 'daily'\r\n    ? userStats.dates || []\r\n    : granularity === 'weekly'\r\n      ? userStats.weeks || []\r\n      : granularity === 'yearly'\r\n        ? userStats.years || []\r\n        : userStats.months || [];\r\n\r\n  const values = userStats.values || [];\r\n\r\n  // Asignar diferentes colores\r\n  const colors = [\r\n    'rgba(255, 99, 132, 0.6)',\r\n    'rgba(54, 162, 235, 0.6)',\r\n    'rgba(255, 206, 86, 0.6)',\r\n    'rgba(75, 192, 192, 0.6)',\r\n    'rgba(153, 102, 255, 0.6)',\r\n    'rgba(255, 159, 64, 0.6)',\r\n  ];\r\n\r\n  const borderColors = [\r\n    'rgba(255, 99, 132, 1)',\r\n    'rgba(54, 162, 235, 1)',\r\n    'rgba(255, 206, 86, 1)',\r\n    'rgba(75, 192, 192, 1)',\r\n    'rgba(153, 102, 255, 1)',\r\n    'rgba(255, 159, 64, 1)',\r\n  ];\r\n\r\n  const chartData = {\r\n    labels: labels, // Etiquetas para todos los gráficos\r\n    datasets: [\r\n      {\r\n        label: 'Número de Usuarios Nuevos',\r\n        data: values,\r\n        borderColor: borderColors,\r\n        backgroundColor: colors,\r\n        borderWidth: chartType === 'pie' ? 1 : 2,\r\n        fill: chartType === 'line', // Solo llena el área para el gráfico de líneas\r\n      }\r\n    ]\r\n  };\r\n\r\n  const lineBarChartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n        position: 'top' as const,\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: (context: any) => `${context.dataset.label}: ${context.raw}`,\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: granularity === 'daily' ? 'Días' : granularity === 'weekly' ? 'Semanas' : granularity === 'yearly' ? 'Años' : 'Meses',\r\n        },\r\n        grid: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          autoSkip: false, // No auto-skip, para mostrar todos los datos\r\n          maxTicksLimit: 20,\r\n        },\r\n      },\r\n      y: {\r\n        title: {\r\n          display: true,\r\n          text: 'Número de Usuarios Nuevos',\r\n        },\r\n        grid: {\r\n          borderDash: [5, 5],\r\n        },\r\n        ticks: {\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const pieChartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n        position: 'top' as const,  // Mostrar leyenda en la parte superior\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: (context: any) => {\r\n            const label = context.label || '';\r\n            const value = context.raw || '';\r\n            const percentage = ((value / values.reduce((a: number, b: number) => a + b, 0)) * 100).toFixed(2) + '%';\r\n            return `${label}: ${value} (${percentage})`;\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1, p: 3 }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Métricas del Dashboard\r\n      </Typography>\r\n      <Tabs\r\n        value={granularity}\r\n        onChange={handleGranularityChange}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n      >\r\n        <Tab label=\"Diario\" value=\"daily\" />\r\n        <Tab label=\"Semanal\" value=\"weekly\" />\r\n        <Tab label=\"Mensual\" value=\"monthly\" />\r\n        <Tab label=\"Anual\" value=\"yearly\" />\r\n      </Tabs>\r\n      <Tabs\r\n        value={chartType}\r\n        onChange={handleChartTypeChange}\r\n        indicatorColor=\"secondary\"\r\n        textColor=\"secondary\"\r\n        centered\r\n        sx={{ mt: 2 }}\r\n      >\r\n        <Tab label=\"Líneas\" value=\"line\" />\r\n        <Tab label=\"Barras\" value=\"bar\" />\r\n        <Tab label=\"Circular\" value=\"pie\" />\r\n      </Tabs>\r\n      <Grid container spacing={3} sx={{ mt: 3, justifyContent: 'center' }}>\r\n        <Grid item xs={12} md={8} lg={6}>\r\n          <Paper elevation={3} sx={{ p: 3 }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Usuarios Nuevos\r\n            </Typography>\r\n            {chartType === 'line' && <Line data={chartData} options={lineBarChartOptions as any} />}\r\n            {chartType === 'bar' && <Bar data={chartData} options={lineBarChartOptions as any} />}\r\n            {chartType === 'pie' && <Pie data={chartData} options={pieChartOptions} />}\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TeacMetrics;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}