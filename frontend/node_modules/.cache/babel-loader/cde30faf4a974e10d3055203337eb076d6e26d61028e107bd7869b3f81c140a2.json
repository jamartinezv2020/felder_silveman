{"ast":null,"code":"var _jsxFileName = \"C:\\\\02072024\\\\frontend\\\\src\\\\components\\\\PrivateRoute.tsx\";\n// src/components/PrivateRoute.tsx\n\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const isAuthenticated = !!localStorage.getItem('token');\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 54\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Route","Redirect","jsxDEV","_jsxDEV","PrivateRoute","component","Component","rest","isAuthenticated","localStorage","getItem","render","props","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/02072024/frontend/src/components/PrivateRoute.tsx"],"sourcesContent":["// src/components/PrivateRoute.tsx\r\n\r\nimport React, { ComponentType } from 'react';\r\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\r\n\r\ninterface PrivateRouteProps extends RouteProps {\r\n  component: ComponentType<any>;\r\n}\r\n\r\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({ component: Component, ...rest }) => {\r\n  const isAuthenticated = !!localStorage.getItem('token');\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n\r\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAyB,OAAO;AAC5C,SAASC,KAAK,EAAEC,QAAQ,QAAoB,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM/D,MAAMC,YAAyC,GAAGA,CAAC;EAAEC,SAAS,EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,KAAK;EACvF,MAAMC,eAAe,GAAG,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAEvD,oBACEP,OAAA,CAACH,KAAK;IAAA,GACAO,IAAI;IACRI,MAAM,EAAGC,KAAK,IACZJ,eAAe,gBAAGL,OAAA,CAACG,SAAS;MAAA,GAAKM;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAAGb,OAAA,CAACF,QAAQ;MAACgB,EAAE,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACrE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEN,CAAC;AAACE,EAAA,GAXId,YAAyC;AAa/C,eAAeA,YAAY;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}