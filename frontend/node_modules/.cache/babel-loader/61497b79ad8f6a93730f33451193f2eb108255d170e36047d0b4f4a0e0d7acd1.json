{"ast":null,"code":"var _jsxFileName = \"C:\\\\felder_silveman\\\\frontend\\\\src\\\\pages\\\\UserManagementPage\\\\UserManagementPage.tsx\",\n  _s = $RefreshSig$();\n// src/pages/admin/UserManagementPage.tsx\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../../context/AuthContext'; // Importando el hook de autenticación\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserManagementPage = () => {\n  _s();\n  const {\n    token,\n    isAuthenticated\n  } = useAuth(); // Accediendo al token y a la función isAuthenticated\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        if (!isAuthenticated()) {\n          throw new Error('Token no encontrado. Por favor, inicia sesión nuevamente.'); // Verificando la autenticación\n        }\n\n        // Realizando la solicitud para obtener los usuarios\n        const response = await axios.get('http://localhost:5000/api/users');\n        console.log('Usuarios obtenidos:', response.data);\n      } catch (error) {\n        console.error('Error al obtener usuarios:', error.message); // Mostrando el error en la consola\n      }\n    };\n    fetchUsers();\n  }, [token, isAuthenticated]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Gesti\\xF3n de Usuarios\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this); // Retornando el contenido de la página\n};\n_s(UserManagementPage, \"KMjQUOBaEK00yP74At01zMhGAKA=\", false, function () {\n  return [useAuth];\n});\n_c = UserManagementPage;\nexport default UserManagementPage;\nvar _c;\n$RefreshReg$(_c, \"UserManagementPage\");","map":{"version":3,"names":["React","useEffect","axios","useAuth","jsxDEV","_jsxDEV","UserManagementPage","_s","token","isAuthenticated","fetchUsers","Error","response","get","console","log","data","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/felder_silveman/frontend/src/pages/UserManagementPage/UserManagementPage.tsx"],"sourcesContent":["// src/pages/admin/UserManagementPage.tsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../../context/AuthContext'; // Importando el hook de autenticación\r\n\r\nconst UserManagementPage = () => {\r\n  const { token, isAuthenticated } = useAuth(); // Accediendo al token y a la función isAuthenticated\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        if (!isAuthenticated()) {\r\n          throw new Error('Token no encontrado. Por favor, inicia sesión nuevamente.'); // Verificando la autenticación\r\n        }\r\n\r\n        // Realizando la solicitud para obtener los usuarios\r\n        const response = await axios.get('http://localhost:5000/api/users');\r\n\r\n        console.log('Usuarios obtenidos:', response.data);\r\n      } catch (error) {\r\n        console.error('Error al obtener usuarios:', error.message); // Mostrando el error en la consola\r\n      }\r\n    };\r\n\r\n    fetchUsers();\r\n  }, [token, isAuthenticated]);\r\n\r\n  return <div>Gestión de Usuarios</div>; // Retornando el contenido de la página\r\n};\r\n\r\nexport default UserManagementPage;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAkB,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,2BAA2B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM;IAAEC,KAAK;IAAEC;EAAgB,CAAC,GAAGN,OAAO,CAAC,CAAC,CAAC,CAAC;;EAE9CF,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,IAAI,CAACD,eAAe,CAAC,CAAC,EAAE;UACtB,MAAM,IAAIE,KAAK,CAAC,2DAA2D,CAAC,CAAC,CAAC;QAChF;;QAEA;QACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,iCAAiC,CAAC;QAEnEC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEH,QAAQ,CAACI,IAAI,CAAC;MACnD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC;MAC9D;IACF,CAAC;IAEDR,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACF,KAAK,EAAEC,eAAe,CAAC,CAAC;EAE5B,oBAAOJ,OAAA;IAAAc,QAAA,EAAK;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC,CAAC,CAAC;AACzC,CAAC;AAAChB,EAAA,CAvBID,kBAAkB;EAAA,QACaH,OAAO;AAAA;AAAAqB,EAAA,GADtClB,kBAAkB;AAyBxB,eAAeA,kBAAkB;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}