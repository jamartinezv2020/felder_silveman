{"ast":null,"code":"var _jsxFileName = \"C:\\\\02072024\\\\frontend\\\\src\\\\components\\\\LoginForm.tsx\",\n  _s = $RefreshSig$();\n// src/components/LoginForm.tsx\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { login, register, recoverPassword } from '../services/authService';\nimport { TextField, Button, Container, Typography, Box, Link } from '@mui/material';\n\n/**\r\n * Componente de formulario de autenticación.\r\n * Permite a los usuarios iniciar sesión, registrarse y recuperar la contraseña.\r\n * \r\n * @returns {JSX.Element} - El componente AuthForm.\r\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AuthForm = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [mode, setMode] = useState('login');\n  const navigate = useNavigate();\n\n  /**\r\n   * Maneja el envío del formulario basado en el modo actual (login, register, recover).\r\n   * \r\n   * @param {React.FormEvent} e - Evento de envío del formulario.\r\n   */\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let success = false;\n    if (mode === 'login') {\n      success = await login(email, password);\n      if (success) {\n        navigate('/dashboard');\n      } else {\n        alert('Login failed');\n      }\n    } else if (mode === 'register') {\n      success = await register(email, password, {}); // Pasando un objeto vacío como tercer argumento\n      if (success) {\n        alert('Registration successful. Please log in.');\n        setMode('login');\n      } else {\n        alert('Registration failed');\n      }\n    } else if (mode === 'recover') {\n      success = await recoverPassword(email);\n      if (success) {\n        alert('Password recovery email sent');\n        setMode('login');\n      } else {\n        alert('Password recovery failed');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        mt: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: [mode === 'login' && 'Login', mode === 'register' && 'Register', mode === 'recover' && 'Recover Password']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        sx: {\n          mt: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"email\",\n          label: \"Email Address\",\n          name: \"email\",\n          autoComplete: \"email\",\n          autoFocus: true,\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), mode !== 'recover' && /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          id: \"password\",\n          autoComplete: \"current-password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          children: [mode === 'login' && 'Login', mode === 'register' && 'Register', mode === 'recover' && 'Send Recovery Email']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: mode === 'login' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              href: \"#\",\n              variant: \"body2\",\n              onClick: () => setMode('register'),\n              children: \"Don't have an account? Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              href: \"#\",\n              variant: \"body2\",\n              onClick: () => setMode('recover'),\n              children: \"Forgot password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Link, {\n            href: \"#\",\n            variant: \"body2\",\n            onClick: () => setMode('login'),\n            children: \"Back to Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthForm, \"kltS2i9N/ShZ7mpu2FCGNmBsu64=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["React","useState","useNavigate","login","register","recoverPassword","TextField","Button","Container","Typography","Box","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","AuthForm","_s","email","setEmail","password","setPassword","mode","setMode","navigate","handleSubmit","e","preventDefault","success","alert","maxWidth","children","sx","display","flexDirection","alignItems","mt","component","variant","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","value","onChange","target","type","mb","justifyContent","href","onClick","_c","$RefreshReg$"],"sources":["C:/02072024/frontend/src/components/LoginForm.tsx"],"sourcesContent":["// src/components/LoginForm.tsx\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { login, register, recoverPassword } from '../services/authService';\r\nimport { TextField, Button, Container, Typography, Box, Link } from '@mui/material';\r\n\r\n/**\r\n * Componente de formulario de autenticación.\r\n * Permite a los usuarios iniciar sesión, registrarse y recuperar la contraseña.\r\n * \r\n * @returns {JSX.Element} - El componente AuthForm.\r\n */\r\nconst AuthForm: React.FC = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [mode, setMode] = useState<'login' | 'register' | 'recover'>('login');\r\n  const navigate = useNavigate();\r\n\r\n  /**\r\n   * Maneja el envío del formulario basado en el modo actual (login, register, recover).\r\n   * \r\n   * @param {React.FormEvent} e - Evento de envío del formulario.\r\n   */\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    let success = false;\r\n\r\n    if (mode === 'login') {\r\n      success = await login(email, password);\r\n      if (success) {\r\n        navigate('/dashboard');\r\n      } else {\r\n        alert('Login failed');\r\n      }\r\n    } else if (mode === 'register') {\r\n      success = await register(email, password, {}); // Pasando un objeto vacío como tercer argumento\r\n      if (success) {\r\n        alert('Registration successful. Please log in.');\r\n        setMode('login');\r\n      } else {\r\n        alert('Registration failed');\r\n      }\r\n    } else if (mode === 'recover') {\r\n      success = await recoverPassword(email);\r\n      if (success) {\r\n        alert('Password recovery email sent');\r\n        setMode('login');\r\n      } else {\r\n        alert('Password recovery failed');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          mt: 8,\r\n        }}\r\n      >\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          {mode === 'login' && 'Login'}\r\n          {mode === 'register' && 'Register'}\r\n          {mode === 'recover' && 'Recover Password'}\r\n        </Typography>\r\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          {mode !== 'recover' && (\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          )}\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n          >\r\n            {mode === 'login' && 'Login'}\r\n            {mode === 'register' && 'Register'}\r\n            {mode === 'recover' && 'Send Recovery Email'}\r\n          </Button>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            {mode === 'login' ? (\r\n              <>\r\n                <Link href=\"#\" variant=\"body2\" onClick={() => setMode('register')}>\r\n                  {\"Don't have an account? Register\"}\r\n                </Link>\r\n                <Link href=\"#\" variant=\"body2\" onClick={() => setMode('recover')}>\r\n                  {\"Forgot password?\"}\r\n                </Link>\r\n              </>\r\n            ) : (\r\n              <Link href=\"#\" variant=\"body2\" onClick={() => setMode('login')}>\r\n                {\"Back to Login\"}\r\n              </Link>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}