{"ast":null,"code":"var _jsxFileName = \"C:\\\\felder_silveman\\\\frontend\\\\src\\\\components\\\\DashboardMetrics\\\\TeacMetrics.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Typography, Grid, Paper, Slider, Tooltip } from '@mui/material';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip as ChartTooltip, Legend, Filler } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, ChartTooltip, Legend, Filler);\nconst TeacMetrics = () => {\n  _s();\n  const [userStats, setUserStats] = useState(null);\n  const [granularity, setGranularity] = useState('monthly');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/users/metrics/${granularity}`);\n        setUserStats(response.data);\n      } catch (error) {\n        console.error('Error al obtener datos', error);\n        setUserStats({\n          error: 'Error al cargar los datos'\n        });\n      }\n    };\n    fetchData();\n  }, [granularity]);\n  const handleGranularityChange = (event, newValue) => {\n    setGranularity(newValue === 0 ? 'daily' : 'monthly');\n  };\n  if (userStats && userStats.error) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      children: userStats.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  if (!userStats) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      children: \"Cargando datos...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  const labels = granularity === 'daily' ? userStats.dates || [] : userStats.months || [];\n  const values = userStats.values || [];\n  const lineChartData = {\n    labels: labels,\n    datasets: [{\n      label: 'Número de Usuarios Nuevos',\n      data: values,\n      borderColor: '#4CAF50',\n      backgroundColor: 'rgba(76, 175, 80, 0.2)',\n      fill: true\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"M\\xE9tricas del Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3,\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: granularity === 'daily' ? 'Seleccionar Granularidad: Diario' : 'Seleccionar Granularidad: Mensual',\n        children: /*#__PURE__*/_jsxDEV(Slider, {\n          value: granularity === 'daily' ? 0 : 1,\n          onChange: handleGranularityChange,\n          step: 1,\n          marks: true,\n          min: 0,\n          max: 1,\n          valueLabelDisplay: \"auto\",\n          valueLabelFormat: value => value === 0 ? 'Diario' : 'Mensual',\n          sx: {\n            width: 300\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 10,\n        lg: 8,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            align: \"center\",\n            children: \"Usuarios Nuevos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              position: 'relative',\n              height: '400px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Line, {\n              data: lineChartData,\n              options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    position: 'top'\n                  },\n                  tooltip: {\n                    callbacks: {\n                      label: function (tooltipItem) {\n                        return `Usuarios Nuevos: ${tooltipItem.raw}`;\n                      }\n                    }\n                  }\n                },\n                scales: {\n                  x: {\n                    beginAtZero: true,\n                    ticks: {\n                      callback: function (value) {\n                        if (granularity === 'monthly') {\n                          const months = ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'];\n                          const index = Number(value);\n                          return index >= 0 && index < months.length ? months[index] : '';\n                        }\n                        return value;\n                      }\n                    }\n                  },\n                  y: {\n                    beginAtZero: true\n                  }\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(TeacMetrics, \"tkmrIKitcU7RcQngqZ7Uige0F/o=\");\n_c = TeacMetrics;\nexport default TeacMetrics;\nvar _c;\n$RefreshReg$(_c, \"TeacMetrics\");","map":{"version":3,"names":["React","useEffect","useState","Box","Typography","Grid","Paper","Slider","Tooltip","Line","axios","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","ChartTooltip","Legend","Filler","jsxDEV","_jsxDEV","register","TeacMetrics","_s","userStats","setUserStats","granularity","setGranularity","fetchData","response","get","data","error","console","handleGranularityChange","event","newValue","variant","align","children","fileName","_jsxFileName","lineNumber","columnNumber","labels","dates","months","values","lineChartData","datasets","label","borderColor","backgroundColor","fill","sx","flexGrow","p","gutterBottom","mb","display","justifyContent","title","value","onChange","step","marks","min","max","valueLabelDisplay","valueLabelFormat","width","container","spacing","alignItems","item","xs","md","lg","elevation","position","height","options","responsive","maintainAspectRatio","plugins","legend","tooltip","callbacks","tooltipItem","raw","scales","x","beginAtZero","ticks","callback","index","Number","length","y","_c","$RefreshReg$"],"sources":["C:/felder_silveman/frontend/src/components/DashboardMetrics/TeacMetrics.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Box, Typography, Grid, Paper, Slider, Tooltip } from '@mui/material';\r\nimport { Line } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip as ChartTooltip, Legend, Filler } from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, ChartTooltip, Legend, Filler);\r\n\r\nconst TeacMetrics: React.FC = () => {\r\n  const [userStats, setUserStats] = useState<any>(null);\r\n  const [granularity, setGranularity] = useState<'daily' | 'monthly'>('monthly');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/users/metrics/${granularity}`);\r\n        setUserStats(response.data);\r\n      } catch (error) {\r\n        console.error('Error al obtener datos', error);\r\n        setUserStats({ error: 'Error al cargar los datos' });\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [granularity]);\r\n\r\n  const handleGranularityChange = (event: Event, newValue: number | number[]) => {\r\n    setGranularity(newValue === 0 ? 'daily' : 'monthly');\r\n  };\r\n\r\n  if (userStats && userStats.error) {\r\n    return <Typography variant=\"h6\" align=\"center\">{userStats.error}</Typography>;\r\n  }\r\n\r\n  if (!userStats) {\r\n    return <Typography variant=\"h6\" align=\"center\">Cargando datos...</Typography>;\r\n  }\r\n\r\n  const labels = granularity === 'daily' ? userStats.dates || [] : userStats.months || [];\r\n  const values = userStats.values || [];\r\n\r\n  const lineChartData = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        label: 'Número de Usuarios Nuevos',\r\n        data: values,\r\n        borderColor: '#4CAF50',\r\n        backgroundColor: 'rgba(76, 175, 80, 0.2)',\r\n        fill: true\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1, p: 3 }}>\r\n      <Typography variant=\"h4\" gutterBottom align=\"center\">\r\n        Métricas del Dashboard\r\n      </Typography>\r\n      <Box sx={{ mb: 3, display: 'flex', justifyContent: 'center' }}>\r\n        <Tooltip title={granularity === 'daily' ? 'Seleccionar Granularidad: Diario' : 'Seleccionar Granularidad: Mensual'}>\r\n          <Slider\r\n            value={granularity === 'daily' ? 0 : 1}\r\n            onChange={handleGranularityChange}\r\n            step={1}\r\n            marks\r\n            min={0}\r\n            max={1}\r\n            valueLabelDisplay=\"auto\"\r\n            valueLabelFormat={(value) => (value === 0 ? 'Diario' : 'Mensual')}\r\n            sx={{ width: 300 }}\r\n          />\r\n        </Tooltip>\r\n      </Box>\r\n      <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12} md={10} lg={8}>\r\n          <Paper elevation={3} sx={{ p: 3 }}>\r\n            <Typography variant=\"h6\" gutterBottom align=\"center\">\r\n              Usuarios Nuevos\r\n            </Typography>\r\n            <Box sx={{ position: 'relative', height: '400px' }}>\r\n              <Line \r\n                data={lineChartData} \r\n                options={{\r\n                  responsive: true,\r\n                  maintainAspectRatio: false,\r\n                  plugins: {\r\n                    legend: {\r\n                      position: 'top',\r\n                    },\r\n                    tooltip: {\r\n                      callbacks: {\r\n                        label: function(tooltipItem) {\r\n                          return `Usuarios Nuevos: ${tooltipItem.raw}`;\r\n                        }\r\n                      }\r\n                    }\r\n                  },\r\n                  scales: {\r\n                    x: {\r\n                      beginAtZero: true,\r\n                      ticks: {\r\n                        callback: function(value) {\r\n                          if (granularity === 'monthly') {\r\n                            const months = ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'];\r\n                            const index = Number(value);\r\n                            return index >= 0 && index < months.length ? months[index] : '';\r\n                          }\r\n                          return value;\r\n                        }\r\n                      }\r\n                    },\r\n                    y: {\r\n                      beginAtZero: true,\r\n                    }\r\n                  }\r\n                }}\r\n              />\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TeacMetrics;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}