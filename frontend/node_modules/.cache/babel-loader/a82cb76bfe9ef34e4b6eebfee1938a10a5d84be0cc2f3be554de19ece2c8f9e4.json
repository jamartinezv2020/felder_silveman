{"ast":null,"code":"var _jsxFileName = \"C:\\\\02072024\\\\frontend\\\\src\\\\components\\\\StudentList.tsx\",\n  _s = $RefreshSig$();\n// src/components/StudentList.tsx\n\nimport React, { useEffect, useState } from 'react';\nimport { getStudents } from '../services/studentService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentList = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  useEffect(() => {\n    const fetchStudents = async () => {\n      try {\n        const data = await getStudents();\n        setStudents(data);\n      } catch (error) {\n        console.error('Error fetching students:', error);\n      }\n    };\n    fetchStudents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Student List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: students.map(student => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [student.name, \" - \", student.email]\n      }, student._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentList, \"Xxsbsc/n21pueGlfwfykfeIEF1E=\");\n_c = StudentList;\nexport default StudentList;\nvar _c;\n$RefreshReg$(_c, \"StudentList\");","map":{"version":3,"names":["React","useEffect","useState","getStudents","jsxDEV","_jsxDEV","StudentList","_s","students","setStudents","fetchStudents","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","student","name","email","_id","_c","$RefreshReg$"],"sources":["C:/02072024/frontend/src/components/StudentList.tsx"],"sourcesContent":["// src/components/StudentList.tsx\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getStudents } from '../services/studentService';\r\n\r\ninterface Student {\r\n  _id: string;\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\nconst StudentList: React.FC = () => {\r\n  const [students, setStudents] = useState<Student[]>([]);\r\n\r\n  useEffect(() => {\r\n    const fetchStudents = async () => {\r\n      try {\r\n        const data = await getStudents();\r\n        setStudents(data);\r\n      } catch (error) {\r\n        console.error('Error fetching students:', error);\r\n      }\r\n    };\r\n\r\n    fetchStudents();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Student List</h1>\r\n      <ul>\r\n        {students.map((student) => (\r\n          <li key={student._id}>\r\n            {student.name} - {student.email}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentList;\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQzD,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAY,EAAE,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACd,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMR,WAAW,CAAC,CAAC;QAChCM,WAAW,CAACE,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDF,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBb,OAAA;MAAAS,QAAA,EACGN,QAAQ,CAACW,GAAG,CAAEC,OAAO,iBACpBf,OAAA;QAAAS,QAAA,GACGM,OAAO,CAACC,IAAI,EAAC,KAAG,EAACD,OAAO,CAACE,KAAK;MAAA,GADxBF,OAAO,CAACG,GAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACX,EAAA,CA5BID,WAAqB;AAAAkB,EAAA,GAArBlB,WAAqB;AA8B3B,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}