{"ast":null,"code":"var _jsxFileName = \"C:\\\\felder_silveman\\\\frontend\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/AuthContext.tsx\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Definición de la interfaz para el contexto de autenticación\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Creando el contexto de autenticación\nconst AuthContext = /*#__PURE__*/createContext(undefined);\n\n// Hook personalizado para usar el contexto de autenticación\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// Proveedor de autenticación que envuelve la aplicación\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  // Estado para almacenar el token\n  const [token, setToken] = useState(() => {\n    // Inicializar el estado del token desde localStorage si existe\n    return localStorage.getItem('token');\n  });\n  useEffect(() => {\n    // Configurar axios para incluir el token en cada solicitud si está presente\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  }, [token]);\n\n  // Función de inicio de sesión que guarda el token en el estado y en localStorage\n  const login = token => {\n    setToken(token);\n    localStorage.setItem('token', token); // Almacenar el token en localStorage\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  };\n\n  // Función de cierre de sesión que elimina el token del estado y de localStorage\n  const logout = () => {\n    setToken(null);\n    localStorage.removeItem('token'); // Eliminar el token de localStorage\n    delete axios.defaults.headers.common['Authorization'];\n  };\n\n  // Función para verificar si el usuario está autenticado\n  const isAuthenticated = () => {\n    return token !== null;\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      login,\n      logout,\n      isAuthenticated\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"7UUCZ2fuxXLmmHaBjQxqeWr9nGw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","token","setToken","localStorage","getItem","defaults","headers","common","login","setItem","logout","removeItem","isAuthenticated","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/felder_silveman/frontend/src/context/AuthContext.tsx"],"sourcesContent":["// src/context/AuthContext.tsx\r\n\r\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport axios from 'axios';\r\n\r\n// Definición de la interfaz para el contexto de autenticación\r\ninterface AuthContextProps {\r\n  token: string | null;\r\n  login: (token: string) => void;\r\n  logout: () => void;\r\n  isAuthenticated: () => boolean;\r\n}\r\n\r\n// Creando el contexto de autenticación\r\nconst AuthContext = createContext<AuthContextProps | undefined>(undefined);\r\n\r\n// Hook personalizado para usar el contexto de autenticación\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n// Proveedor de autenticación que envuelve la aplicación\r\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  // Estado para almacenar el token\r\n  const [token, setToken] = useState<string | null>(() => {\r\n    // Inicializar el estado del token desde localStorage si existe\r\n    return localStorage.getItem('token');\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Configurar axios para incluir el token en cada solicitud si está presente\r\n    if (token) {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    } else {\r\n      delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n  }, [token]);\r\n\r\n  // Función de inicio de sesión que guarda el token en el estado y en localStorage\r\n  const login = (token: string) => {\r\n    setToken(token);\r\n    localStorage.setItem('token', token); // Almacenar el token en localStorage\r\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n  };\r\n\r\n  // Función de cierre de sesión que elimina el token del estado y de localStorage\r\n  const logout = () => {\r\n    setToken(null);\r\n    localStorage.removeItem('token'); // Eliminar el token de localStorage\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  };\r\n\r\n  // Función para verificar si el usuario está autenticado\r\n  const isAuthenticated = () => {\r\n    return token !== null;\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ token, login, logout, isAuthenticated }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AACxF,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQA;AACA,MAAMC,WAAW,gBAAGP,aAAa,CAA+BQ,SAAS,CAAC;;AAE1E;AACA,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGV,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI,CAACI,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;;AAED;AAAAD,EAAA,CARaD,OAAO;AASpB,OAAO,MAAMI,YAA+C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC/E;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAgB,MAAM;IACtD;IACA,OAAOgB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACtC,CAAC,CAAC;EAEFhB,SAAS,CAAC,MAAM;IACd;IACA,IAAIa,KAAK,EAAE;MACTZ,KAAK,CAACgB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUN,KAAK,EAAE;IACpE,CAAC,MAAM;MACL,OAAOZ,KAAK,CAACgB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;IACvD;EACF,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMO,KAAK,GAAIP,KAAa,IAAK;IAC/BC,QAAQ,CAACD,KAAK,CAAC;IACfE,YAAY,CAACM,OAAO,CAAC,OAAO,EAAER,KAAK,CAAC,CAAC,CAAC;IACtCZ,KAAK,CAACgB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUN,KAAK,EAAE;EACpE,CAAC;;EAED;EACA,MAAMS,MAAM,GAAGA,CAAA,KAAM;IACnBR,QAAQ,CAAC,IAAI,CAAC;IACdC,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,OAAOtB,KAAK,CAACgB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;EACvD,CAAC;;EAED;EACA,MAAMK,eAAe,GAAGA,CAAA,KAAM;IAC5B,OAAOX,KAAK,KAAK,IAAI;EACvB,CAAC;EAED,oBACEV,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAEb,KAAK;MAAEO,KAAK;MAAEE,MAAM;MAAEE;IAAgB,CAAE;IAAAb,QAAA,EACpEA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAClB,GAAA,CAxCWF,YAA+C;AAAAqB,EAAA,GAA/CrB,YAA+C;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}