{"ast":null,"code":"var _jsxFileName = \"C:\\\\felder_silveman\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Toolbar } from '@mui/material';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  children\n}) => {\n  _s();\n  const [mobileOpen, setMobileOpen] = useState(false);\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      handleDrawerToggle: handleDrawerToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      mobileOpen: mobileOpen,\n      handleDrawerToggle: handleDrawerToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      sx: {\n        flexGrow: 1,\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"33pz4tKGxA4/1e2zOoGo8gBQzP0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","Box","Toolbar","Header","Sidebar","jsxDEV","_jsxDEV","Dashboard","children","_s","mobileOpen","setMobileOpen","handleDrawerToggle","sx","display","fileName","_jsxFileName","lineNumber","columnNumber","component","flexGrow","p","_c","$RefreshReg$"],"sources":["C:/felder_silveman/frontend/src/components/Dashboard/Dashboard.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Box, Toolbar } from '@mui/material';\r\nimport Header from './Header';\r\nimport Sidebar from './Sidebar';\r\n\r\ninterface DashboardProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst Dashboard: React.FC<DashboardProps> = ({ children }) => {\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex' }}>\r\n      <Header handleDrawerToggle={handleDrawerToggle} />\r\n      <Sidebar mobileOpen={mobileOpen} handleDrawerToggle={handleDrawerToggle} />\r\n      <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\r\n        <Toolbar />\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,EAAEC,OAAO,QAAQ,eAAe;AAC5C,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMhC,MAAMC,SAAmC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMY,kBAAkB,GAAGA,CAAA,KAAM;IAC/BD,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;EAED,oBACEJ,OAAA,CAACL,GAAG;IAACY,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAN,QAAA,gBAC3BF,OAAA,CAACH,MAAM;MAACS,kBAAkB,EAAEA;IAAmB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClDZ,OAAA,CAACF,OAAO;MAACM,UAAU,EAAEA,UAAW;MAACE,kBAAkB,EAAEA;IAAmB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3EZ,OAAA,CAACL,GAAG;MAACkB,SAAS,EAAC,MAAM;MAACN,EAAE,EAAE;QAAEO,QAAQ,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAE,CAAE;MAAAb,QAAA,gBAC9CF,OAAA,CAACJ,OAAO;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACVV,QAAQ;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACT,EAAA,CAjBIF,SAAmC;AAAAe,EAAA,GAAnCf,SAAmC;AAmBzC,eAAeA,SAAS;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}